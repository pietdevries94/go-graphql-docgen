package cmd

import (
	"bytes"
	"fmt"
	"io/ioutil"
	"log"
	"os/exec"

	"github.com/pietdevries94/go-graphql-docgen/config"
	"github.com/pietdevries94/go-graphql-docgen/generate"
	"github.com/pietdevries94/go-graphql-docgen/parser"
)

// const endpoint = "https://favware.tech/api"

func Execute() {
	cfg, err := config.LoadConfig()
	if err != nil {
		panic(err)
	}
	parsed := parser.MustParse(cfg)
	buf := bytes.NewBuffer(nil)
	fmt.Fprint(buf, "// Code generated by github.com/pietdevries94/go-graphql-docgen, DO NOT EDIT.\n\n")
	fmt.Fprintf(buf, "package %s\n\n", cfg.Output.Package)

	generate.GenerateSchemaTypes(buf, parsed)
	generate.GenerateQueries(buf, parsed)

	err = ioutil.WriteFile(cfg.Output.File, buf.Bytes(), 0644)
	if err != nil {
		panic(err)
	}

	cmd := exec.Command(`gofmt`, `-w`, cfg.Output.File)
	err = cmd.Run()
	if err != nil {
		log.Fatal("FATAL: gofmt failed")
	}
}
